//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Pieces = newPiecesTable("public", "pieces", "")

type piecesTable struct {
	postgres.Table

	// Columns
	ID          postgres.ColumnInteger
	Description postgres.ColumnString
	ImageLink   postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PiecesTable struct {
	piecesTable

	EXCLUDED piecesTable
}

// AS creates new PiecesTable with assigned alias
func (a PiecesTable) AS(alias string) *PiecesTable {
	return newPiecesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new PiecesTable with assigned schema name
func (a PiecesTable) FromSchema(schemaName string) *PiecesTable {
	return newPiecesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new PiecesTable with assigned table prefix
func (a PiecesTable) WithPrefix(prefix string) *PiecesTable {
	return newPiecesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new PiecesTable with assigned table suffix
func (a PiecesTable) WithSuffix(suffix string) *PiecesTable {
	return newPiecesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newPiecesTable(schemaName, tableName, alias string) *PiecesTable {
	return &PiecesTable{
		piecesTable: newPiecesTableImpl(schemaName, tableName, alias),
		EXCLUDED:    newPiecesTableImpl("", "excluded", ""),
	}
}

func newPiecesTableImpl(schemaName, tableName, alias string) piecesTable {
	var (
		IDColumn          = postgres.IntegerColumn("id")
		DescriptionColumn = postgres.StringColumn("description")
		ImageLinkColumn   = postgres.StringColumn("image_link")
		allColumns        = postgres.ColumnList{IDColumn, DescriptionColumn, ImageLinkColumn}
		mutableColumns    = postgres.ColumnList{DescriptionColumn, ImageLinkColumn}
	)

	return piecesTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:          IDColumn,
		Description: DescriptionColumn,
		ImageLink:   ImageLinkColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
